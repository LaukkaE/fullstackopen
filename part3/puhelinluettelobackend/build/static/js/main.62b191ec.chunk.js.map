{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/PhoneBook.js","components/Persons.js","components/Notification.js","components/ErrorNotification.js","App.js","index.js"],"names":["Filter","props","onChange","event","setFilter","target","value","filter","PersonForm","onSubmit","addNumber","handleNameChange","newName","handleNumberChange","newNumber","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Persons","persons","person","name","toLowerCase","includes","map","i","number","onClick","console","log","window","confirm","bookService","getData","setMessage","setTimeout","catch","error","setErrorMessage","handleDelete","Notification","message","className","ErrorNotification","errorMessage","App","useState","setPersons","setNewName","setNewNumber","filterName","setFilterName","notificationMessage","setNotificationMessage","useEffect","numberObject","length","Math","max","n","find","indexOfPerson","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAceA,MAZf,SAAgBC,GACZ,OACI,oDAEI,uBACIC,SAAU,SAACC,GAAD,OAAWF,EAAMG,UAAUD,EAAME,OAAOC,QAClDA,MAAOL,EAAMM,aCYdC,MAlBf,SAAoBP,GAChB,OACI,uBAAMQ,SAAUR,EAAMS,UAAtB,UACI,wCAEI,uBAAOR,SAAUD,EAAMU,iBAAkBL,MAAOL,EAAMW,aAE1D,0CAEI,uBAAOV,SAAUD,EAAMY,mBAAoBP,MAAOL,EAAMa,eAE5D,8BACI,wBAAQC,KAAK,SAAb,uB,gBCbVC,EAAU,eAyBD,EAvBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAqBhC,EAlBA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAgBhC,EAbA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAWhC,EARA,SAACG,GAEZ,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAACC,GAAD,OAAcA,EAASC,SC8BhCM,MA/Cf,SAAiB1B,GAyBb,OACI,8BACI,6BACKA,EAAM2B,QACFrB,QAAO,SAACsB,GAAD,OACJA,EAAOC,KACFC,cACAC,SAAS/B,EAAMM,OAAOwB,kBAE9BE,KAAI,SAACJ,EAAQK,GAAT,OACD,+BACKL,EAAOC,KADZ,IACmBD,EAAOM,OAAQ,IAC9B,wBAAQC,QAAS,kBApCpB,SAACP,GAClBQ,QAAQC,IAAIT,GACRU,OAAOC,QAAP,iBAAyBX,EAAOC,KAAhC,OACAW,EACYZ,EAAOL,IACdL,MAAK,WACFlB,EAAMyC,UACNzC,EAAM0C,WAAN,kBAA4Bd,EAAOC,OACnCc,YAAW,WACP3C,EAAM0C,WAAW,QAClB,QAENE,OAAM,SAACC,GACJ7C,EAAM8C,gBAAN,yBACsBlB,EAAOC,KAD7B,8CAGA7B,EAAMyC,UACNE,YAAW,WACP3C,EAAM8C,gBAAgB,QACvB,QAiB4BC,CAAanB,IAApC,sBAFKA,EAAOL,Y,MCxBzByB,MAXf,YAAmC,IAAXC,EAAU,EAAVA,QACpB,OAAgB,OAAZA,EACO,KAGP,8BACI,qBAAKC,UAAU,UAAf,SAA0BD,OCKvBE,MAXf,YAA8C,IAAjBC,EAAgB,EAAhBA,aACzB,OAAqB,OAAjBA,EACO,KAGP,8BACI,qBAAKF,UAAU,QAAf,SAAwBE,OC6GrBC,EA7GH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACP3B,EADO,KACE4B,EADF,OAEgBD,mBAAS,IAFzB,mBAEP3C,EAFO,KAEE6C,EAFF,OAGoBF,mBAAS,IAH7B,mBAGPzC,EAHO,KAGI4C,EAHJ,OAIsBH,mBAAS,IAJ/B,mBAIPI,EAJO,KAIKC,EAJL,OAKwCL,mBAAS,MALjD,mBAKPM,EALO,KAKcC,EALd,OAM0BP,mBAAS,MANnC,mBAMPF,EANO,KAMON,EANP,KAedgB,qBAAU,WACNrB,MACD,IAEH,IAAMA,EAAU,WACZD,IAAqBtB,MAAK,SAACC,GACvBiB,QAAQC,IAAI,UAAWlB,GACvBoC,EAAWpC,OA6DnB,OACI,gCACI,2CACA,cAAC,EAAD,CAAc8B,QAASW,IACvB,cAAC,EAAD,CAAmBR,aAAcA,IACjC,cAAC,EAAD,CAAQ9C,OAAQoD,EAAYvD,UAAWwD,IACvC,2CACA,cAAC,EAAD,CACIlD,UA3DM,SAACP,GACf,IAAM6D,EAAe,CACjBlC,KAAMlB,EAENY,IARAI,EAAQqC,OAAS,EAAIC,KAAKC,IAAL,MAAAD,KAAI,YAAQtC,EAAQK,KAAI,SAACmC,GAAD,OAAOA,EAAE5C,QAAO,GAClD,EAQXW,OAAQrB,GAEZ,GAAIc,EAAQyC,MAAK,SAACxC,GAAD,OAAYA,EAAOC,OAASlB,KAAU,CACnD,IAAM0D,EAAgB1C,EAAQyC,MAC1B,SAACxC,GAAD,OAAYA,EAAOC,OAASlB,KAEhCT,EAAMoE,iBAEFhC,OAAOC,QAAP,UACO5B,EADP,6EAIAyB,QAAQC,IAAIgC,GACZ7B,EAAmB6B,EAAc9C,GAAIwC,GAAc7C,MAAK,WACpDuB,IACAoB,EAAuB,WAAD,OAAYE,EAAalC,OAC/Cc,YAAW,WACPkB,EAAuB,QACxB,SAGXL,EAAW,IACXC,EAAa,SAEbvD,EAAMoE,iBACN9B,EACYuB,GACP7C,MAAK,SAACC,GAEHsB,IACAe,EAAW,IACXC,EAAa,IACbI,EAAuB,SAAD,OAAUE,EAAalC,OAC7Cc,YAAW,WACPkB,EAAuB,QACxB,QAENjB,OAAM,SAACC,GACJT,QAAQC,IAAIQ,EAAM1B,SAASC,MAC3B0B,EAAgBD,EAAM1B,SAASC,KAAKyB,OACpCF,YAAW,WACPG,EAAgB,QACjB,SAaPpC,iBApFa,SAACR,GACtBsD,EAAWtD,EAAME,OAAOC,QAoFhBO,mBAlFe,SAACV,GACxBuD,EAAavD,EAAME,OAAOC,QAkFlBM,QAASA,EACTE,UAAWA,IAEf,yCACA,cAAC,EAAD,CACIc,QAASA,EACTrB,OAAQoD,EACRjB,QAASA,EACTC,WAAYmB,EACZf,gBAAiBA,QC5GjCyB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.62b191ec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Filter(props) {\r\n    return (\r\n        <div>\r\n            filter shown with\r\n            <input\r\n                onChange={(event) => props.setFilter(event.target.value)}\r\n                value={props.filter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nfunction PersonForm(props) {\r\n    return (\r\n        <form onSubmit={props.addNumber}>\r\n            <div>\r\n                name:\r\n                <input onChange={props.handleNameChange} value={props.newName} />\r\n            </div>\r\n            <div>\r\n                number:\r\n                <input onChange={props.handleNumberChange} value={props.newNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PersonForm;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\n//eslint varoitus vaikka kopioitu suoraan kurssiosasta, joten voinee jättää huomioimatta\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, update, remove };\r\n","import React from 'react';\r\nimport bookService from '../services/PhoneBook';\r\n\r\nfunction Persons(props) {\r\n    const handleDelete = (person) => {\r\n        console.log(person);\r\n        if (window.confirm(`Delete ${person.name}?`)) {\r\n            bookService\r\n                .remove(person.id)\r\n                .then(() => {\r\n                    props.getData();\r\n                    props.setMessage(`Deleted ${person.name}`);\r\n                    setTimeout(() => {\r\n                        props.setMessage(null);\r\n                    }, 5000);\r\n                })\r\n                .catch((error) => {\r\n                    props.setErrorMessage(\r\n                        `Information of ${person.name} has already been removed from the server`\r\n                    );\r\n                    props.getData();\r\n                    setTimeout(() => {\r\n                        props.setErrorMessage(null);\r\n                    }, 5000);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {props.persons\r\n                    .filter((person) =>\r\n                        person.name\r\n                            .toLowerCase()\r\n                            .includes(props.filter.toLowerCase())\r\n                    )\r\n                    .map((person, i) => (\r\n                        <li key={person.id}>\r\n                            {person.name} {person.number}{' '}\r\n                            <button onClick={() => handleDelete(person)}>\r\n                                delete\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\nimport './Notification.css';\r\n\r\nfunction Notification({ message}) {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"message\">{message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport './Notification.css';\r\n\r\nfunction ErrorNotification({ errorMessage }) {\r\n    if (errorMessage === null) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"error\">{errorMessage}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorNotification;\r\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport bookService from './services/PhoneBook';\n// import { nanoid } from 'nanoid';\nimport Notification from './components/Notification';\nimport ErrorNotification from './components/ErrorNotification';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filterName, setFilterName] = useState('');\n    const [notificationMessage, setNotificationMessage] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    };\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const getData = () => {\n        bookService.getAll().then((response) => {\n            console.log('getData', response);\n            setPersons(response);\n        });\n    };\n\n    const generateId = () => {\n        const maxId =\n            persons.length > 0 ? Math.max(...persons.map((n) => n.id)) : 0;\n        return maxId + 1;\n    };\n\n    const addNumber = (event) => {\n        const numberObject = {\n            name: newName,\n            //backendin kanssa vanha ID systeemi tökköili, joten käytetään samaa id:n tekijäfunktiota, kuten osa 3 backendissä\n            id: generateId(),\n            number: newNumber,\n        };\n        if (persons.find((person) => person.name === newName)) {\n            const indexOfPerson = persons.find(\n                (person) => person.name === newName\n            );\n            event.preventDefault();\n            if (\n                window.confirm(\n                    `${newName} is already added to phonebook, replace the old number with a new one?`\n                )\n            ) {\n                console.log(indexOfPerson);\n                bookService.update(indexOfPerson.id, numberObject).then(() => {\n                    getData();\n                    setNotificationMessage(`Updated ${numberObject.name}`);\n                    setTimeout(() => {\n                        setNotificationMessage(null);\n                    }, 5000);\n                });\n            }\n            setNewName('');\n            setNewNumber('');\n        } else {\n            event.preventDefault();\n            bookService\n                .create(numberObject)\n                .then((response) => {\n                    // setPersons(persons.concat(numberObject));\n                    getData();\n                    setNewName('');\n                    setNewNumber('');\n                    setNotificationMessage(`Added ${numberObject.name}`);\n                    setTimeout(() => {\n                        setNotificationMessage(null);\n                    }, 5000);\n                })\n                .catch((error) => {\n                    console.log(error.response.data);\n                    setErrorMessage(error.response.data.error);\n                    setTimeout(() => {\n                        setErrorMessage(null);\n                    }, 5000);\n                });\n        }\n    };\n    return (\n        <div>\n            <h2>PhoneBook</h2>\n            <Notification message={notificationMessage} />\n            <ErrorNotification errorMessage={errorMessage} />\n            <Filter filter={filterName} setFilter={setFilterName} />\n            <h2>add a new</h2>\n            <PersonForm\n                addNumber={addNumber}\n                handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n                newName={newName}\n                newNumber={newNumber}\n            />\n            <h2>Numbers</h2>\n            <Persons\n                persons={persons}\n                filter={filterName}\n                getData={getData}\n                setMessage={setNotificationMessage}\n                setErrorMessage={setErrorMessage}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}